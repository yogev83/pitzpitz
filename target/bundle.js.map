{"version":3,"sources":["webpack:///webpack/bootstrap 2898c01ebf2c21fd4b18","webpack:///./src/main/common/utils.js","webpack:///./src/main/components/component.js","webpack:///./src/canvas/renderable/framable.js","webpack:///./src/main/components/play/part/part.js","webpack:///./src/main/components/play/puzzleStructure/simplePuzzleStructure.js","webpack:///./src/main/components/play/puzzleStructure/puzzleStructure.js","webpack:///./src/canvas/renderable/renderable.js","webpack:///./src/canvas/image/basicImage.js","webpack:///./src/canvas/renderable/clickable.js","webpack:///./src/main/main.js","webpack:///./src/main/mainController.js","webpack:///./src/main/views/mainViewport/canvasView.js","webpack:///./src/canvas/renderer/renderer.js","webpack:///./src/canvas/renderer/scheduler/scheduler.js","webpack:///./src/canvas/renderer/scheduler/task.js","webpack:///./src/main/game.js","webpack:///./src/main/components/play/play.js","webpack:///./src/main/components/structure.js","webpack:///./src/main/components/play/puzzle/puzzle.js","webpack:///./src/canvas/animation/propertyAnimation.js","webpack:///./src/canvas/image/spritesheet.js","webpack:///./src/canvas/animation/animation.js","webpack:///./src/canvas/renderable/draggable.js","webpack:///./src/main/components/play/puzzleStructure/multiPuzzleStructure.js","webpack:///./src/main/components/play/star/star.js","webpack:///./src/main/components/play/puzzleStructure/linearPuzzleStructure.js","webpack:///./src/main/components/puzzleImage/puzzleImageLoader .js","webpack:///./src/main/nextButton.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,6DAA6D;AAC7D,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEe,8DAAK,EAAC;;;;;;;;ACrCrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;AChCzB;AAAA;AAAA;AAAsC;AACS;AACA;;AAE/C,wBAAwB,4DAAU;AAClC,gCAAgC;AAChC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mEAAW;AACjC;;AAEA;AACA;AACA,UAAU,qEAAS;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;AC3JzB;AAAA;AAAA;AAAwC;AACwB;AACtB;;AAE1C,mBAAmB,2DAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA,UAAU,6EAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS,8DAAK;AACd;AACA;;AAEA;AACA,WAAW,8DAAK;AAChB;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,8DAAK;AACrB,gBAAgB,8DAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,8DAAK;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA;;AAEe,6DAAI,EAAC;;;;;;;;AC9HpB;AAAA;AAAgD;AAChB;;AAEhC,oCAAoC,iEAAe;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,2DAAI;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,2DAAI;AAChC;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,oBAAoB,iEAAe;AACnC,KAAK;AACL;AACA;AACA;;AAEe,8EAAqB,EAAC;;;;;;;;AC9CrC;AAAA;AAAA;AAAwC;AACF;AACI;;AAE1C,8BAA8B,2DAAS;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,+DAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,8DAAK;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,wEAAe,EAAC;;;;;;;;AC3E/B;AAAA;AAA6C;AACkB;;AAE/D;AACA,wCAAwC;AACxC;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,kEAAU;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,6EAAiB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,6EAAiB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,mEAAU,EAAC;;;;;;;;AChN1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEe,mEAAU,EAAC;;;;;;;;AC3B1B;AAAmC;;AAEnC,wBAAwB,0DAAS;AACjC,gCAAgC;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;ACpHzB;AAAA;AAA8C;;AAE9C;AACA;AACA;;AAEA,2BAA2B,gEAAc;AACzC;AACA,CAAC,qBAAqB;;;;;;;;ACRtB;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC/B;;AAEqB;AACA;AACU;;AAEzD;AACA;AACA,oBAAoB,sDAAI;;AAExB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,0BAA0B,+EAAU;AACpC;AACA;;AAEA,yBAAyB,sEAAS;AAClC;AACA,UAAU,8EAAU,EAAE,oCAAoC;AAC1D;;AAEA,qBAAqB,sEAAS;AAC9B;AACA,UAAU,8EAAU,aAAa,qCAAqC;AACtE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEe,uEAAc,EAAC;;;;;;;;AC1H9B;AAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,0EAAQ;AAC/B;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,mEAAU,EAAC;;;;;;;;AC1C1B;AAAA;AAA8C;AACV;;AAEpC;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,SAAS,GAAG,SAAS,GAAG,SAAS;AAC7D;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,qEAAS;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gEAAI;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,EAAE,GAAG,EAAE,GAAG,EAAE;AAC9B;;AAEA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEe,iEAAQ,EAAC;;;;;;;;ACjQxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;ACnCzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,6DAAI,EAAC;;;;;;;;ACXpB;AAAA;AAAA;AAA0C;AACkC;AACtC;;AAEtC;AACA;AACA;AACA,oBAAoB,4DAAU;AAC9B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,oBAAoB,sEAAI;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,2FAAiB;AACrB;AACA;AACA,OAAO;AACP,sBAAsB,2FAAiB;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEe,6DAAI,EAAC;;;;;;;;ACtCpB;AAAA;AAAA;AAAA;AAAA;AAA4E;AACF;AACrC;AACE;AACqC;;AAE5E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uFAAqB;AAC3C;AACA;AACA,sBAAsB,sFAAoB;AAC1C;AACA;AACA,sBAAsB,uFAAqB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,qBAAqB,gEAAI;AACzB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,SAAS,8DAAK;AACd;AACA;AACA;AACA,SAAS,8DAAK;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEe,6DAAI,EAAC;;;;;;;;ACrFpB;AAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,8DAAK;;AAEtB;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;ACtCzB;AAAA;AAAA;AAAwC;AACE;AACqB;;AAE/D,qBAAqB,2DAAS;AAC9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU,4EAAS;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,mBAAmB,2DAAS;AAC5B;AACA,UAAU,4EAAS;AACnB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,+DAAM,EAAC;;;;;;;;ACrFtB;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,0EAAiB,EAAC;;;;;;;;ACpDjC;AAAsC;;AAEtC,0BAA0B,4DAAU;AACpC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,oEAAW,EAAC;;;;;;;;AChG3B;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;AC7CzB;AAAoC;;AAEpC,wBAAwB,2DAAS;AACjC,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEe,kEAAS,EAAC;;;;;;;;AC5DzB;AAAA;AAAgD;AAChB;;AAEhC,mCAAmC,iEAAe;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAoB,EAAC;;;;;;;;AC9CpC;AAAA;AAAA;AAAwC;AACuB;AACrB;;AAE1C,mBAAmB,2DAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,4EAAS;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,uBAAuB,8DAAK;AAC5B,oBAAoB,8DAAK;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,oBAAoB,8DAAK;AACzB;AACA;;AAEA;AACA,YAAY,8DAAK;AACjB,YAAY,8DAAK;AACjB;AACA;AACA;AACA;AACA;;AAEe,6DAAI,EAAC;;;;;;;;ACzEpB;AAA4D;;AAE5D,oCAAoC,uEAAqB;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,8EAAqB,EAAC;;;;;;;;ACpCrC;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,8DAAK;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,gFAAuB,EAAC;;;;;;;;AC3CvC;AAAA;AAAuD;AACR;;AAE/C,yBAAyB,sEAAS;AAClC;AACA;;AAEA;;AAEA;;AAEA;AACA,UAAU,6EAAS;AACnB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,mEAAU,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2898c01ebf2c21fd4b18","const Utils = {\r\n  distance(x1, y1, x2, y2) {\r\n    let a = x2 - x1;\r\n    let b = y2 - y1;\r\n    return Math.sqrt(a * a + b * b);\r\n  },\r\n\r\n  getQueryParam(key) {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get(key);\r\n  },\r\n\r\n  toArray(object) {\r\n    if (!Array.isArray(object)) {\r\n      object = [object];\r\n    }\r\n    return object;\r\n  },\r\n\r\n  getRandomFloat(min, max) {\r\n    var rand = Math.random() * (max - min) + min;\r\n    var power = Math.pow(10, 3);\r\n    return Math.floor(rand * power) / power;\r\n  },\r\n\r\n  getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n  },\r\n\r\n  getRandomIntFromRanges(ranges) {\r\n    let range = ranges[Utils.getRandomIntInclusive(0, ranges.length - 1)];\r\n    return this.getRandomIntInclusive(range[0], range[1]);\r\n  }\r\n};\r\n\r\nexport default Utils;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/common/utils.js\n// module id = 0\n// module chunks = 0","class Component {\r\n  constructor() {\r\n    this.view = null;\r\n  }\r\n\r\n  render() {\r\n    let renderer = puzzle.getRenderer();\r\n    if (this.view) {\r\n      renderer.add(this.view);\r\n    } else {\r\n      console.warn(\r\n        \"WARNING: You are trying to render a component that does not have a view set!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  setView(view) {\r\n    this.view = view;\r\n    return this.view;\r\n  }\r\n\r\n  getView() {\r\n    return this.view;\r\n  }\r\n\r\n  destroy() {\r\n    //console.warn(this.view.options.imageName);\r\n    let renderer = puzzle.getRenderer();\r\n    renderer.remove(this.view);\r\n  }\r\n}\r\n\r\nexport default Component;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/component.js\n// module id = 1\n// module chunks = 0","import Renderable from \"./renderable\";\r\nimport Spritesheet from \"../image/spritesheet\";\r\nimport Animation from \"../animation/animation\";\r\n\r\nclass Frameable extends Renderable {\r\n  constructor(x, y, options = {}) {\r\n    if (!isNaN(x) && typeof options == \"object\") {\r\n      options.spritesheet = options.spritesheet || {};\r\n    } else {\r\n      options.spritesheet = x.spritesheet || {};\r\n    }\r\n\r\n    super(x, y, options);\r\n    this.targetFrameAnimation = null;\r\n    this.colorMapBeforeRendering = null;\r\n  }\r\n\r\n  /**\r\n   * @overrides\r\n   * */\r\n  initImager() {\r\n    let spritesheetOptions = {\r\n      sWidth: this.options.spritesheet.sWidth || this.options.width,\r\n      sHeight: this.options.spritesheet.sHeight || this.options.height,\r\n      rowSize: this.options.spritesheet.rowSize,\r\n      columnSize: this.options.spritesheet.columnSize,\r\n      frameMapping: this.options.spritesheet.frameMapping\r\n    };\r\n    this.imager = new Spritesheet(this.options.imageName, spritesheetOptions);\r\n  }\r\n\r\n  animateToFrame(targetFrame, time, options) {\r\n    this.animations.push(\r\n      new Animation(this.imager, targetFrame, time, options)\r\n    );\r\n  }\r\n\r\n  setFrame(frame) {\r\n    let frameIndex = frame;\r\n    if (isNaN(frameIndex)) {\r\n      frameIndex = this.imager.getFrameIndex(frameIndex);\r\n      frameIndex = Math.max(0, frameIndex);\r\n    }\r\n    this.imager.setFrame(frameIndex);\r\n  }\r\n\r\n  easeFrame(frame, time, onComplete) {\r\n    let targetOpacity = 1;\r\n\r\n    this.animatePropertyTo(\"opacity\", 0, time, {\r\n      onComplete: () => {\r\n        this.targetFrameAnimation = null;\r\n        this.setFrame(frame);\r\n        this.options.opacity = targetOpacity;\r\n        if (typeof onComplete == \"function\") {\r\n          onComplete();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.targetFrameAnimation = {\r\n      frame: frame,\r\n      opacity: targetOpacity\r\n    };\r\n  }\r\n\r\n  drawImage(ctx, imageObject) {\r\n    if (imageObject.frame) {\r\n      this.options.width = this.options.width || imageObject.frame.frameWidth;\r\n      this.options.height =\r\n        this.options.height || imageObject.frame.frameHeight;\r\n\r\n      // if (this.options.imageName == \"andreaLayingDown.png\") {\r\n      //   console.warn(this.x, this.y);\r\n      // }\r\n\r\n      // console.warn(this.options.imageName, this.x, this.y);\r\n\r\n      if (!this.x && this.options.width) {\r\n        this.center(ctx);\r\n      }\r\n\r\n      this.drawFrame(ctx, imageObject.image, imageObject.frame);\r\n      if (\r\n        this.targetFrameAnimation &&\r\n        this.imager.getFrame() !== this.targetFrameAnimation.frame\r\n      ) {\r\n        let currentAlpha = ctx.globalAlpha;\r\n        let currectFrame = this.imager.getFrame();\r\n\r\n        ctx.globalAlpha = this.targetFrameAnimation.opacity - ctx.globalAlpha;\r\n        this.setFrame(this.targetFrameAnimation.frame);\r\n        this.renderImage(ctx);\r\n        ctx.globalAlpha = currentAlpha;\r\n        this.setFrame(currectFrame);\r\n      }\r\n\r\n      this.onReady();\r\n    } else {\r\n      super.drawImage(ctx, imageObject);\r\n    }\r\n  }\r\n\r\n  drawFrame(ctx, image, frame) {\r\n    if (this.options.mask) {\r\n      // console.warn(\r\n      //   frame.frameX + this.options.mask.x,\r\n      //   frame.frameY + this.options.mask.y,\r\n      //   this.options.width,\r\n      //   this.options.height,\r\n      //   this.x,\r\n      //   this.y,\r\n      //   this.options.width,\r\n      //   this.options.height\r\n      // );\r\n      ctx.drawImage(\r\n        image,\r\n        frame.frameX + this.options.mask.x,\r\n        frame.frameY + this.options.mask.y,\r\n        this.options.width,\r\n        this.options.height,\r\n        this.x,\r\n        this.y,\r\n        this.options.width,\r\n        this.options.height\r\n      );\r\n      // console.warn(\r\n      //   \"mask\",\r\n      //   this.options.imageName,\r\n      //   ctx.globalAlpha,\r\n      //   frame.frameX + this.options.mask.x,\r\n      //   frame.frameY + this.options.mask.y\r\n      // );\r\n    } else {\r\n      // console.warn(\r\n      //   this.options.imageName,\r\n      //   ctx.globalAlpha,\r\n      //   frame.frameX,\r\n      //   frame.frameY\r\n      // );\r\n      ctx.drawImage(\r\n        image,\r\n        frame.frameX,\r\n        frame.frameY,\r\n        frame.frameWidth,\r\n        frame.frameHeight,\r\n        this.x,\r\n        this.y,\r\n        this.options.width,\r\n        this.options.height\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Frameable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderable/framable.js\n// module id = 2\n// module chunks = 0","import Component from \"../../component\";\r\nimport Draggable from \"../../../../canvas/renderable/draggable\";\r\nimport Utils from \"../../../common/utils\";\r\n\r\nclass Part extends Component {\r\n  static get targetTolerance() {\r\n    return 100;\r\n  }\r\n\r\n  static get fadeOutTime() {\r\n    return 500;\r\n  }\r\n\r\n  static get dropPercent() {\r\n    return 105;\r\n  }\r\n\r\n  constructor(x, y, partData, onTarget) {\r\n    super();\r\n\r\n    let offscreenPoint = this.getOffscreenPoint(x);\r\n    let rotation = this.getRandomRotation();\r\n\r\n    this.location = { x: x, y: y };\r\n    this.partData = partData;\r\n    this.onTarget = onTarget;\r\n\r\n    this.sound = new Audio(\"assets/wood.wav\");\r\n\r\n    this.setView(\r\n      new Draggable(offscreenPoint.x, offscreenPoint.y, {\r\n        imageName: this.partData.image,\r\n        onDrop: this.drop.bind(this),\r\n        opacity: 1,\r\n        rotation: rotation,\r\n        spritesheet: {\r\n          rowSize: 3\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getOffscreenPoint(x) {\r\n    return {\r\n      x: x < 900 ? -500 : 1900 + 500,\r\n      y: Utils.getRandomIntInclusive(0, 900)\r\n    };\r\n  }\r\n\r\n  getRandomRotation() {\r\n    return Utils.getRandomIntFromRanges([\r\n      [-180, -90],\r\n      [90, 180]\r\n    ]);\r\n  }\r\n\r\n  putInPlace() {\r\n    let xtime = Utils.getRandomIntInclusive(500, 800);\r\n    let ytime = Utils.getRandomIntInclusive(500, 800);\r\n    let rotationTime = Math.max(xtime, ytime);\r\n    this.view.animatePropertyTo(\"x\", this.location.x, xtime);\r\n    this.view.animatePropertyTo(\"y\", this.location.y, ytime);\r\n    this.view.animatePropertyTo(\"rotation\", 0, rotationTime, {\r\n      onComplete: () => {\r\n        this.sound.play();\r\n      }\r\n    });\r\n  }\r\n\r\n  drop() {\r\n    // console.warn(this.view.x, this.view.y);\r\n    let isOnTarget = this.checkIfOnTarget();\r\n    if (isOnTarget) {\r\n      this.onTarget(this);\r\n    } else {\r\n      this.sound.play();\r\n    }\r\n    //Shrinks!!!\r\n    // this.view.animatePropertyTo(\"size\", Part.dropPercent, 50, {\r\n    //   onComplete: () => {\r\n    //     this.view.animatePropertyTo(\"size\", (100 * 100) / Part.dropPercent, 50);\r\n    //     this.checkIfOnTarget();\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  checkIfOnTarget() {\r\n    if (!this.partData.target) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      Utils.distance(\r\n        this.partData.target.x,\r\n        this.partData.target.y,\r\n        this.view.x,\r\n        this.view.y\r\n      ) < Part.targetTolerance\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  destroy(easetime) {\r\n    //VERY VERY BAD!!!!\r\n    //console.warn(\"part destroy\");\r\n    $(\"canvas\").css(\"cursor\", \"initial\");\r\n    this.view.animatePropertyTo(\"opacity\", 0, Part.fadeOutTime, {\r\n      onComplete: () => {\r\n        super.destroy();\r\n      }\r\n    });\r\n    // if (easetime) {\r\n    //   this.view.animatePropertyTo(\"opacity\", 0, Part.fadeOutTime, {\r\n    //     onComplete: () => {\r\n    //       super.destroy();\r\n    //     }\r\n    //   });\r\n    // } else {\r\n    //   super.destroy();\r\n    // }\r\n  }\r\n}\r\n\r\nexport default Part;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/part/part.js\n// module id = 3\n// module chunks = 0","import PuzzleStructure from \"./puzzleStructure\";\nimport Part from \"../part/part\";\n\nclass SimplePuzzleStructure extends PuzzleStructure {\n  constructor(puzzleData, onSolvePart, onSolvePuzzle) {\n    super(puzzleData, onSolvePart, onSolvePuzzle);\n    this.right = null;\n    this.wrongs = [];\n    this.parsePuzzleImage(puzzleData);\n  }\n\n  parseParts(partsData) {\n    let wrongPartBuffer;\n    let locationBuffer = this.getRandomLocation();\n    this.right = new Part(\n      locationBuffer.x,\n      locationBuffer.y,\n      partsData.right,\n      this.solvePart.bind(this)\n    );\n    this.add(this.right);\n\n    this.wrongs = [];\n    $.each(partsData.wrongs, (i, image) => {\n      locationBuffer = this.getRandomLocation();\n      wrongPartBuffer = new Part(locationBuffer.x, locationBuffer.y, {\n        image: image\n      });\n      this.wrongs.push(wrongPartBuffer);\n      this.add(wrongPartBuffer);\n    });\n\n    this.right.putInPlace();\n    $.each(this.wrongs, (i, wrong) => {\n      wrong.putInPlace();\n    });\n  }\n\n  solvePart(part) {\n    $.each(this.wrongs, (i, wrong) => {\n      wrong.destroy(PuzzleStructure.solvingTime / 4);\n    });\n    super.solvePart(part);\n  }\n}\n\nexport default SimplePuzzleStructure;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/puzzleStructure/simplePuzzleStructure.js\n// module id = 4\n// module chunks = 0","import Structure from \"../../structure\";\r\nimport Puzzle from \"../puzzle/puzzle\";\r\nimport Utils from \"../../../common/utils\";\r\n\r\nclass PuzzleStructure extends Structure {\r\n  static get solvingTime() {\r\n    return 1000;\r\n  }\r\n\r\n  constructor(puzzleData, onSolvePart, onSolvePuzzle) {\r\n    super();\r\n    this.isFinal = puzzleData.final;\r\n    this.partsLocations = [];\r\n    this.puzzle = null;\r\n    this.onSolvePart = onSolvePart;\r\n    this.onSolvePuzzle = onSolvePuzzle;\r\n\r\n    this.resetPartsLocations();\r\n  }\r\n\r\n  resetPartsLocations() {\r\n    let ctx = puzzle.getRenderer().getContext();\r\n    this.partsLocations = [\r\n      {\r\n        x: 50,\r\n        y: 50\r\n      },\r\n      {\r\n        x: 50,\r\n        y: ctx.canvas.height - 500\r\n      },\r\n      {\r\n        x: ctx.canvas.width - 400,\r\n        y: 50\r\n      },\r\n      {\r\n        x: ctx.canvas.width - 400,\r\n        y: ctx.canvas.height - 500\r\n      }\r\n    ];\r\n  }\r\n\r\n  parsePuzzleImage(puzzleData) {\r\n    this.puzzle = new Puzzle(\r\n      puzzleData.puzzle,\r\n      this.solve.bind(this),\r\n      PuzzleStructure.solvingTime,\r\n      this.isFinal\r\n    );\r\n    this.add(this.puzzle);\r\n\r\n    this.parseParts(puzzleData.parts);\r\n  }\r\n\r\n  getRandomLocation() {\r\n    let index = Utils.getRandomIntInclusive(0, this.partsLocations.length - 1);\r\n    return this.partsLocations.splice(index, 1)[0];\r\n  }\r\n\r\n  solvePart(part) {\r\n    part.destroy();\r\n    this.onSolvePart(\r\n      part.view.x + part.view.options.width / 2,\r\n      part.view.y + part.view.options.height / 2\r\n    );\r\n    this.solve();\r\n  }\r\n\r\n  solve() {\r\n    this.puzzle.onSolved(() => {\r\n      this.onSolvePuzzle();\r\n    });\r\n  }\r\n}\r\n\r\nexport default PuzzleStructure;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/puzzleStructure/puzzleStructure.js\n// module id = 5\n// module chunks = 0","import BasicImage from \"../image/basicImage\";\r\nimport PropertyAnimation from \"../animation/propertyAnimation\";\r\n\r\nclass Renderable {\r\n  constructor(x = 0, y = 0, options = {}) {\r\n    this.animations = [];\r\n    this.dragging = false;\r\n    this.draggingOffset = { x: 0, y: 0 };\r\n    this.onReadyCalled = false;\r\n\r\n    if (!isNaN(x)) {\r\n      this.setPosition(x, y);\r\n      this.options = options;\r\n    } else {\r\n      if (typeof x == \"string\") {\r\n        this.initImager(x);\r\n      } else {\r\n        this.options = x;\r\n      }\r\n    }\r\n\r\n    if (!this.imager && this.options.imageName) {\r\n      this.initImager(this.options.imageName);\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.options.hidden = true;\r\n  }\r\n\r\n  show() {\r\n    this.options.hidden = false;\r\n  }\r\n\r\n  initImager(imageName) {\r\n    this.imager = new BasicImage(imageName);\r\n  }\r\n\r\n  center(ctx) {\r\n    const canvasWidth = ctx.canvas.width;\r\n    const canvasHeight = ctx.canvas.height;\r\n\r\n    this.x = canvasWidth / 2 - this.options.width / 2;\r\n    this.y = canvasHeight / 2 - this.options.height / 2;\r\n  }\r\n\r\n  setPosition(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  getPosition() {\r\n    return {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n  }\r\n\r\n  setProperty(propertyName, value) {\r\n    this.options[propertyName] = value;\r\n  }\r\n\r\n  animatePropertyTo(propertyName, target, time, options) {\r\n    if (propertyName == \"size\") {\r\n      this.animatePropertyTo(\r\n        \"width\",\r\n        (this.options.width * target) / 100,\r\n        time,\r\n        options\r\n      );\r\n      this.animatePropertyTo(\r\n        \"height\",\r\n        (this.options.height * target) / 100,\r\n        time\r\n        //  options\r\n      );\r\n      return;\r\n    }\r\n\r\n    let currentValue =\r\n      propertyName == \"x\" || propertyName == \"y\"\r\n        ? this[propertyName]\r\n        : this.options[propertyName];\r\n    let delta = target - currentValue;\r\n\r\n    this.animations.push(\r\n      new PropertyAnimation(propertyName, currentValue, delta, time, options)\r\n    );\r\n  }\r\n\r\n  animateProperty(propertyName, delta, time, options) {\r\n    let currentValue =\r\n      propertyName == \"x\" || propertyName == \"y\"\r\n        ? this[propertyName]\r\n        : this.options[propertyName];\r\n\r\n    this.animations.push(\r\n      new PropertyAnimation(propertyName, currentValue, delta, time, options)\r\n    );\r\n  }\r\n\r\n  render(ctx) {\r\n    let animationDoneBuffer;\r\n    let originalX;\r\n    let originalY;\r\n\r\n    ctx.save();\r\n\r\n    for (let i = 0; i < this.animations.length; i++) {\r\n      animationDoneBuffer = this.animations[i].step(this);\r\n      if (animationDoneBuffer) {\r\n        this.animations.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    if (\r\n      typeof this.options.opacity != \"undefined\" &&\r\n      this.options.opacity < 1\r\n    ) {\r\n      ctx.globalAlpha = this.options.opacity;\r\n    }\r\n\r\n    originalX = this.x;\r\n    originalY = this.y;\r\n\r\n    if (\r\n      typeof this.options.rotation != \"undefined\" &&\r\n      this.options.rotation > 0\r\n    ) {\r\n      ctx.translate(this.x, this.y);\r\n      ctx.translate(this.options.width / 2, this.options.height / 2);\r\n      ctx.rotate((this.options.rotation * Math.PI) / 180);\r\n      this.x = -this.options.width / 2;\r\n      this.y = -this.options.height / 2;\r\n    }\r\n\r\n    if (this.imager) {\r\n      this.renderImage(ctx);\r\n    }\r\n\r\n    this.x = originalX;\r\n    this.y = originalY;\r\n    ctx.restore();\r\n  }\r\n\r\n  renderImage(ctx) {\r\n    if (!this.x && this.options.width) {\r\n      this.center(ctx);\r\n    }\r\n\r\n    this.imager.getImage(imageObject => {\r\n      this.drawImage(ctx, imageObject);\r\n    });\r\n  }\r\n\r\n  drawImage(ctx, imageObject) {\r\n    this.options.width = this.options.width || imageObject.image.naturalWidth;\r\n    this.options.height =\r\n      this.options.height || imageObject.image.naturalHeight;\r\n\r\n    ctx.drawImage(\r\n      imageObject.image,\r\n      this.x,\r\n      this.y,\r\n      this.options.width,\r\n      this.options.height\r\n    );\r\n\r\n    this.onReady();\r\n  }\r\n\r\n  onReady() {\r\n    if (\r\n      !this.onReadyCalled &&\r\n      this.x &&\r\n      this.options.width &&\r\n      typeof this.options.onReady == \"function\"\r\n    ) {\r\n      this.onReadyCalled = true;\r\n      this.options.onReady();\r\n    }\r\n  }\r\n\r\n  onClick(e) {}\r\n\r\n  onMove(e) {}\r\n\r\n  onRelease(e) {}\r\n\r\n  onLeave(e) {}\r\n\r\n  hitTest(ctx, x, y) {\r\n    let inside;\r\n\r\n    if (typeof this.options.hitTest == \"function\") {\r\n      inside = this.options.hitTest(ctx, x, y);\r\n    } else {\r\n      inside =\r\n        this.x < x &&\r\n        x < this.x + this.options.width &&\r\n        this.y < y &&\r\n        y < this.y + this.options.height;\r\n    }\r\n\r\n    return inside;\r\n  }\r\n}\r\n\r\nexport default Renderable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderable/renderable.js\n// module id = 6\n// module chunks = 0","class BasicImage {\r\n  constructor(imageName) {\r\n    this.imageName = imageName;\r\n    this.image = null;\r\n  }\r\n\r\n  load(onLoaded) {\r\n    this.image = new Image();\r\n    this.image.src = puzzle.ASSETS_PATH + this.imageName;\r\n    this.image.onload = onLoaded;\r\n  }\r\n\r\n  getImage(onLoaded) {\r\n    if (this.image) {\r\n      onLoaded({\r\n        image: this.image\r\n      });\r\n    } else {\r\n      this.load(() => {\r\n        onLoaded({\r\n          image: this.image\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default BasicImage;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/image/basicImage.js\n// module id = 7\n// module chunks = 0","import Frameable from \"./framable\";\r\n\r\nclass Clickable extends Frameable {\r\n  constructor(x, y, options = {}) {\r\n    if (!isNaN(x) && typeof options == \"object\") {\r\n      options.spritesheet = options.spritesheet || {};\r\n    } else {\r\n      options.spritesheet = x.spritesheet || {};\r\n    }\r\n    options.spritesheet.frameMapping = [\"idle\", \"hover\", \"pressed\"];\r\n\r\n    super(x, y, options);\r\n    this.disabled = false;\r\n    this.pressedState = false;\r\n    this.hoverState = false;\r\n    this.colorHitTest = true;\r\n  }\r\n\r\n  onClick(e) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.pressedState = !this.pressedState;\r\n    this.hoverState = false;\r\n\r\n    if (!this.options.static) {\r\n      if (this.pressedState) {\r\n        this.setFrame(\"pressed\");\r\n      } else {\r\n        this.setFrame(\"idle\");\r\n      }\r\n    }\r\n\r\n    if (typeof this.options.onClick == \"function\") {\r\n      this.options.onClick(e);\r\n    }\r\n  }\r\n\r\n  onMove() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.onHover();\r\n  }\r\n\r\n  onHover() {\r\n    if (!this.pressedState && !this.hoverState) {\r\n      this.hoverState = true;\r\n      if (!this.options.static) {\r\n        this.setFrame(\"hover\");\r\n      }\r\n    }\r\n\r\n    if (typeof this.options.onHover == \"function\") {\r\n      this.options.onHover();\r\n    }\r\n  }\r\n\r\n  onLeave() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverState = false;\r\n    this.pressedState = false;\r\n    if (!this.options.static) {\r\n      this.setFrame(\"idle\");\r\n    }\r\n\r\n    if (typeof this.options.onLeave == \"function\") {\r\n      this.options.onLeave();\r\n    }\r\n  }\r\n\r\n  onRelease(e) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (!this.options.sticky) {\r\n      this.pressedState = false;\r\n      this.onHover();\r\n    }\r\n  }\r\n\r\n  enable() {\r\n    this.disabled = false;\r\n  }\r\n\r\n  disable() {\r\n    this.disabled = true;\r\n  }\r\n\r\n  hitTest(ctx, x, y) {\r\n    let inside;\r\n\r\n    if (typeof this.options.hitTest == \"function\") {\r\n      inside = this.options.hitTest(ctx, x, y);\r\n    } else {\r\n      inside =\r\n        this.x < x &&\r\n        x < this.x + this.options.width &&\r\n        this.y < y &&\r\n        y < this.y + this.options.height;\r\n    }\r\n\r\n    return inside;\r\n  }\r\n\r\n  // colorHitTest(ctx, x, y) {\r\n  //   return this.colorMapBeforeRendering[x][y] != ctx.getImageData(x, y, 1, 1);\r\n  // }\r\n}\r\n\r\nexport default Clickable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderable/clickable.js\n// module id = 8\n// module chunks = 0","import MainController from \"./mainController\";\r\n\r\n(scope => {\r\n  scope.FRAME_RATE = 24;\r\n  scope.ASSETS_PATH = \"./assets/\";\r\n\r\n  let mainController = new MainController();\r\n  mainController.start();\r\n})((window.puzzle = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/main.js\n// module id = 9\n// module chunks = 0","import CanvasView from \"./views/mainViewport/canvasView\";\r\nimport Game from \"./game\";\r\n\r\nimport Part from \"./components/play/part/part\";\r\nimport Component from \"./components/component\";\r\nimport Renderable from \"../canvas/renderable/renderable\";\r\n\r\nclass MainController {\r\n  constructor() {\r\n    this.game = new Game(this.updateCount.bind(this));\r\n\r\n    this.canvasView = null;\r\n    this.$canvasWrapper = null;\r\n\r\n    this.theme = new Audio(\"assets/theme.mp3\");\r\n    this.theme.loop = true;\r\n\r\n    this.count = 0;\r\n\r\n    //this.initCanvas();\r\n  }\r\n\r\n  initCanvas() {\r\n    this.canvasView = new CanvasView();\r\n    this.canvasView.initCanvasView();\r\n    this.canvasView.hide();\r\n\r\n    this.birthdate = new Component();\r\n    this.birthdate.setView(\r\n      new Renderable({ imageName: \"2812.png\", opacity: 0 })\r\n    );\r\n\r\n    this.ready = new Component();\r\n    this.ready.setView(\r\n      new Renderable(600, -300, { imageName: \"ready.png\", opacity: 0 })\r\n    );\r\n  }\r\n\r\n  start() {\r\n    let $startBtn = $(\"#startBtn\");\r\n\r\n    $startBtn.click(() => {\r\n      new Audio(\"assets/click.wav\").play();\r\n      $startBtn.remove();\r\n\r\n      document.documentElement.requestFullscreen().then(() => {\r\n        setTimeout(() => {\r\n          this.initCanvas();\r\n          this.theme.play();\r\n          this.intro();\r\n          // this.showCanvas();\r\n          // this.game.start(this.theme);\r\n        }, 1500);\r\n      });\r\n    });\r\n  }\r\n\r\n  intro() {\r\n    let renderer = puzzle.getRenderer();\r\n\r\n    this.birthdate.render();\r\n    this.ready.render();\r\n    this.ready.view.hide();\r\n\r\n    renderer.scheduleTask(this.showBirthdate.bind(this, 500, 400), 2900);\r\n    renderer.scheduleTask(this.hideCanvas.bind(this), 3100);\r\n    renderer.scheduleTask(this.showBirthdate.bind(this, 700, 500), 3300);\r\n    renderer.scheduleTask(this.hideCanvas.bind(this), 3500);\r\n    renderer.scheduleTask(this.getReady.bind(this), 6000);\r\n    renderer.scheduleTask(this.startGame.bind(this), 8000);\r\n  }\r\n\r\n  showCanvas() {\r\n    this.canvasView.show();\r\n  }\r\n\r\n  hideCanvas() {\r\n    this.canvasView.hide();\r\n  }\r\n\r\n  showBirthdate(x, y) {\r\n    this.showCanvas();\r\n    let width = this.birthdate.view.options.width;\r\n    let height = this.birthdate.view.options.height;\r\n    this.birthdate.view.setPosition(x, y);\r\n    this.birthdate.view.animatePropertyTo(\"opacity\", 1, 200, {\r\n      onComplete: () => {\r\n        this.birthdate.view.animatePropertyTo(\"opacity\", 0, 200);\r\n      }\r\n    });\r\n    this.birthdate.view.animatePropertyTo(\"size\", 120, 200, {\r\n      onComplete: () => {\r\n        this.birthdate.view.setProperty(\"width\", width);\r\n        this.birthdate.view.setProperty(\"height\", height);\r\n      }\r\n    });\r\n  }\r\n\r\n  getReady() {\r\n    this.birthdate.destroy();\r\n    this.ready.view.show();\r\n    this.showCanvas();\r\n    this.ready.view.animatePropertyTo(\"y\", 400, 500);\r\n    this.ready.view.animatePropertyTo(\"opacity\", 1, 200);\r\n    //this.ready.view.show();\r\n    //this.ready.view.animateProperty(\"y\", 800);\r\n  }\r\n\r\n  startGame() {\r\n    this.ready.view.animatePropertyTo(\"opacity\", 0, 300);\r\n    this.ready.view.animatePropertyTo(\"y\", 1200, 300, {\r\n      onComplete: () => {\r\n        this.game.start(this.theme);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCount() {\r\n    // $(\"#count\").html(this.count++ + \"/10\");\r\n  }\r\n}\r\n\r\nexport default MainController;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/mainController.js\n// module id = 10\n// module chunks = 0","import Renderer from \"../../../canvas/renderer/renderer\";\r\n\r\nclass CanvasView {\r\n  constructor() {\r\n    this.canvasWrapper = document.getElementById(\"canvas-wrapper\");\r\n    this.canvas = document.getElementsByTagName(\"canvas\")[0];\r\n    return this;\r\n  }\r\n\r\n  initCanvasView() {\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n\r\n    ctx.canvas.width = document.body.clientWidth;\r\n    ctx.canvas.height = document.body.clientHeight;\r\n\r\n    //FIND A BETTER WAY\r\n    let rendererOptions = {\r\n      dragOnTop: true,\r\n      scheduler: true\r\n    };\r\n\r\n    let renderer = new Renderer(this.canvas.getContext(\"2d\"), rendererOptions);\r\n    puzzle.getRenderer = () => {\r\n      return renderer;\r\n    };\r\n\r\n    renderer.startRendering(puzzle.FRAME_RATE);\r\n\r\n    $(this.canvasWrapper).addClass(\"active\");\r\n\r\n    return this;\r\n  }\r\n\r\n  hide() {\r\n    $(this.canvasWrapper).hide();\r\n  }\r\n\r\n  show() {\r\n    $(this.canvasWrapper).show();\r\n  }\r\n}\r\n\r\nexport default CanvasView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/views/mainViewport/canvasView.js\n// module id = 11\n// module chunks = 0","import Scheduler from \"./scheduler/scheduler\";\r\nimport Task from \"./scheduler/task\";\r\n\r\nclass Renderer {\r\n  constructor(ctx, options = {}) {\r\n    this.intervalID = null;\r\n    this.options = options;\r\n    this.ctx = ctx;\r\n\r\n    this.hitCtx = this.createHitCanvas();\r\n    this.colorsHash = {};\r\n\r\n    this.renderables = [];\r\n\r\n    this.attacheEvents(this.ctx.canvas);\r\n  }\r\n\r\n  createHitCanvas() {\r\n    let hitCanvas;\r\n    let hitCtx;\r\n    let canvasWrapper = $(this.ctx.canvas).parent();\r\n    let canvasWrapperRect = canvasWrapper[0].getBoundingClientRect();\r\n\r\n    canvasWrapper.append(\"<canvas id='hitCanvas'></canvas>\");\r\n    hitCanvas = $(\"canvas#hitCanvas\")[0];\r\n    hitCtx = hitCanvas.getContext(\"2d\");\r\n\r\n    hitCtx.canvas.width = canvasWrapperRect.width;\r\n    hitCtx.canvas.height = canvasWrapperRect.height;\r\n\r\n    $(hitCanvas).hide();\r\n    //$(this.ctx.canvas).hide();\r\n    return hitCtx;\r\n  }\r\n\r\n  getContext() {\r\n    return this.ctx;\r\n  }\r\n\r\n  attacheEvents(canvas) {\r\n    canvas.addEventListener(\"mousedown\", e => {\r\n      this.onMouseEvent(\"onClick\", e);\r\n    });\r\n    canvas.addEventListener(\"mousemove\", e => {\r\n      this.onMouseEvent(\"onMove\", e);\r\n    });\r\n    canvas.addEventListener(\"mouseup\", e => {\r\n      this.onMouseEvent(\"onRelease\", e);\r\n    });\r\n  }\r\n\r\n  onMouseEvent(eventName, data) {\r\n    let renderableBuffer;\r\n    let renderableColorKeyBuffer;\r\n    let handled = false;\r\n    for (let i = this.renderables.length - 1; 0 <= i; i--) {\r\n      renderableBuffer = this.renderables[i].value;\r\n      if (renderableBuffer.options.hidden) {\r\n        continue;\r\n      }\r\n\r\n      renderableColorKeyBuffer = this.renderables[i].colorKey;\r\n      if (\r\n        !handled &&\r\n        renderableBuffer.hitTest(this.ctx, data.offsetX, data.offsetY) &&\r\n        this.colorHitTest(data.offsetX, data.offsetY, renderableColorKeyBuffer)\r\n      ) {\r\n        renderableBuffer[eventName](data);\r\n        handled = true;\r\n      } else if (renderableBuffer.hoverState || renderableBuffer.pressedState) {\r\n        renderableBuffer.onLeave(data);\r\n      }\r\n    }\r\n  }\r\n\r\n  colorHitTest(x, y, colorKey) {\r\n    let pixel = this.hitCtx.getImageData(x, y, 1, 1).data;\r\n    let pixelColor = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n    // console.warn(pixelColor);\r\n    return colorKey == pixelColor;\r\n  }\r\n\r\n  startRendering(fps) {\r\n    if (this.options.scheduler) {\r\n      this.scheduler = new Scheduler();\r\n      this.scheduler.run();\r\n    }\r\n    window.requestAnimationFrame(this.render.bind(this));\r\n  }\r\n\r\n  stopRendering() {\r\n    clearInterval(this.intervalID);\r\n    return this;\r\n  }\r\n\r\n  scheduleTask(callback, time) {\r\n    if (!this.scheduler) {\r\n      console.error(\"You did not initatiate this rendere with a schaduler!\");\r\n      return;\r\n    }\r\n\r\n    let task = new Task(callback, this.scheduler.getTime() + time);\r\n    this.scheduler.schedule(task);\r\n  }\r\n\r\n  add(renderable) {\r\n    let z = renderable.options.z || 0;\r\n    let colorKey = this.getUniqeRandomColor();\r\n    let renderableObject = {\r\n      value: renderable,\r\n      z: z\r\n    };\r\n\r\n    if (renderable.colorHitTest) {\r\n      renderableObject.colorKey = colorKey;\r\n    }\r\n\r\n    this.renderables.push(renderableObject);\r\n    this.colorsHash[colorKey] = renderableObject;\r\n\r\n    this.sort();\r\n  }\r\n\r\n  getUniqeRandomColor() {\r\n    while (true) {\r\n      const colorKey = this.getRandomColor();\r\n      // if colours is unique\r\n      if (!this.colorsHash[colorKey]) {\r\n        return colorKey;\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomColor() {\r\n    const r = Math.round(Math.random() * 255);\r\n    const g = Math.round(Math.random() * 255);\r\n    const b = Math.round(Math.random() * 255);\r\n    return `rgb(${r},${g},${b})`;\r\n  }\r\n\r\n  remove(renderable) {\r\n    for (let i = 0; i < this.renderables.length; i++) {\r\n      if (this.renderables[i].value == renderable) {\r\n        this.renderables.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.warn(\"------------------start-------------------\");\r\n    let renderableColorKeyBuffer;\r\n    let renderableBuffer;\r\n    let canvasDataBuffer;\r\n\r\n    //Incase we remove something while rendering\r\n    let renderablesCopy = $.extend(true, [], this.renderables);\r\n\r\n    if (this.scheduler) {\r\n      this.scheduler.tick();\r\n    }\r\n\r\n    this.sort();\r\n\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.hitCtx.clearRect(\r\n      0,\r\n      0,\r\n      this.hitCtx.canvas.width,\r\n      this.hitCtx.canvas.height\r\n    );\r\n\r\n    //console.warn(this.renderables.length);\r\n    for (let i = 0; i < renderablesCopy.length; i++) {\r\n      renderableBuffer = renderablesCopy[i].value;\r\n\r\n      if (renderableBuffer.options.hidden) {\r\n        continue;\r\n      }\r\n\r\n      renderableColorKeyBuffer = renderablesCopy[i].colorKey;\r\n      renderableBuffer.render(this.ctx);\r\n\r\n      if (\r\n        renderableBuffer.colorHitTest &&\r\n        renderableBuffer.options.width &&\r\n        renderableBuffer.options.height\r\n      ) {\r\n        canvasDataBuffer = this.hitCtx.getImageData(\r\n          renderableBuffer.x,\r\n          renderableBuffer.y,\r\n          renderableBuffer.options.width - 50,\r\n          renderableBuffer.options.height - 50\r\n        );\r\n\r\n        this.hitCtx.clearRect(\r\n          renderableBuffer.x,\r\n          renderableBuffer.y,\r\n          renderableBuffer.options.width - 50,\r\n          renderableBuffer.options.height - 50\r\n        );\r\n        renderableBuffer.render(this.hitCtx);\r\n\r\n        this.hitCtx.globalCompositeOperation = \"source-atop\";\r\n        this.hitCtx.fillStyle = renderableColorKeyBuffer;\r\n        this.hitCtx.fillRect(\r\n          renderableBuffer.x,\r\n          renderableBuffer.y,\r\n          renderableBuffer.options.width - 50,\r\n          renderableBuffer.options.height - 50\r\n        );\r\n\r\n        createImageBitmap(canvasDataBuffer).then(\r\n          this.getRecreationOfColorKeyCallback(renderableBuffer).bind(this)\r\n        );\r\n      }\r\n      this.hitCtx.globalCompositeOperation = \"source-over\";\r\n    }\r\n\r\n    //console.warn(\"------------------end-------------------\");\r\n    window.requestAnimationFrame(this.render.bind(this));\r\n  }\r\n\r\n  getRecreationOfColorKeyCallback(renderable) {\r\n    return imgBitmap => {\r\n      this.hitCtx.drawImage(\r\n        imgBitmap,\r\n        renderable.x,\r\n        renderable.y,\r\n        renderable.options.width - 50,\r\n        renderable.options.height - 50\r\n      );\r\n    };\r\n  }\r\n\r\n  sort() {\r\n    let az;\r\n    let bz;\r\n\r\n    this.renderables.sort((a, b) => {\r\n      az = a.value.options.z || a.z;\r\n      bz = b.value.options.z || b.z;\r\n\r\n      if (this.options.dragOnTop) {\r\n        if (a.value.dragging) {\r\n          return 1;\r\n        }\r\n\r\n        if (b.value.dragging) {\r\n          return -1;\r\n        }\r\n      }\r\n\r\n      return az - bz;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Renderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderer/renderer.js\n// module id = 12\n// module chunks = 0","class Scheduler {\n  constructor() {\n    this.startTS = null;\n    this.tasks = [];\n  }\n\n  run() {\n    this.startTS = Date.now();\n  }\n\n  tick() {\n    let now = Date.now();\n    let time = now - this.startTS;\n    let toRemove = [];\n    $.each(this.tasks, (i, task) => {\n      if (task.time <= time) {\n        task.execute();\n        toRemove.push(i);\n      }\n    });\n\n    $.each(toRemove, (i, index) => {\n      this.tasks.splice(index, 1);\n    });\n  }\n\n  schedule(task) {\n    this.tasks.push(task);\n  }\n\n  getTime() {\n    return Date.now() - this.startTS;\n  }\n}\n\nexport default Scheduler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderer/scheduler/scheduler.js\n// module id = 13\n// module chunks = 0","class Task {\n  constructor(callback, time) {\n    this.callback = callback;\n    this.time = time;\n  }\n\n  execute(args) {\n    this.callback(args);\n  }\n}\n\nexport default Task;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderer/scheduler/task.js\n// module id = 14\n// module chunks = 0","import Play from \"./components/play/play\";\r\nimport puzzleImageLoader from \"./components/puzzleImage/puzzleImageLoader \";\r\nimport NextButton from \"./nextButton\";\r\n\r\nclass Game {\r\n  constructor(onNewPlay) {\r\n    this.play = null;\r\n    this.next = new NextButton(() => {\r\n      this.startPlaying();\r\n    });\r\n    this.onNewPlay = onNewPlay;\r\n  }\r\n\r\n  start(theme) {\r\n    this.next.render();\r\n    this.play = new Play(this.showNext.bind(this), theme);\r\n    this.startPlaying();\r\n  }\r\n\r\n  showNext() {\r\n    this.next.putInPlace();\r\n  }\r\n\r\n  startPlaying() {\r\n    let self = this;\r\n    let finalPuzzle;\r\n    puzzleImageLoader.getRandomImage().then(puzzleData => {\r\n      if (puzzleData) {\r\n        self.play.starNewtPlay(puzzleData);\r\n      } else {\r\n        finalPuzzle = puzzleImageLoader.getFinalPuzzle();\r\n        self.play.starNewtPlay(finalPuzzle);\r\n      }\r\n    });\r\n    this.onNewPlay();\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/game.js\n// module id = 15\n// module chunks = 0","import SimplePuzzleStructure from \"./puzzleStructure/simplePuzzleStructure\";\r\nimport MultiPuzzleStructure from \"./puzzleStructure/multiPuzzleStructure\";\r\nimport Star from \"../play/star/star\";\r\nimport Utils from \"../../common/utils\";\r\nimport LinearPuzzleStructure from \"./puzzleStructure/linearPuzzleStructure\";\r\n\r\nclass Play {\r\n  static get numberOfStars() {\r\n    return 20;\r\n  }\r\n\r\n  static get starsLocationOffset() {\r\n    return 200;\r\n  }\r\n\r\n  constructor(onPlayEnd, theme) {\r\n    this.puzzleStrucrure = null;\r\n    this.onPlayEnd = onPlayEnd;\r\n\r\n    this.winSound = new Audio(\"assets/win.mp3\");\r\n    this.winSound.volume = 0.7;\r\n    this.winSound.onplay = () => {\r\n      //$(theme).animate({ volume: 0.5 }, 500);\r\n      theme.volume = 0.7;\r\n    };\r\n    this.winSound.onended = () => {\r\n      //$(theme).animate({ volume: 1 }, 500);\r\n      theme.volume = 1;\r\n    };\r\n  }\r\n\r\n  starNewtPlay(puzzleData) {\r\n    let constructor;\r\n\r\n    if (this.puzzleStrucrure) {\r\n      this.puzzleStrucrure.destroy();\r\n    }\r\n\r\n    switch (puzzleData.type) {\r\n      case \"simple\":\r\n        constructor = SimplePuzzleStructure;\r\n        break;\r\n      case \"multi\":\r\n        constructor = MultiPuzzleStructure;\r\n        break;\r\n      case \"linear\":\r\n        constructor = LinearPuzzleStructure;\r\n    }\r\n\r\n    this.puzzleStrucrure = new constructor(\r\n      puzzleData,\r\n      this.shootStars.bind(this),\r\n      this.solveCompleted.bind(this)\r\n    );\r\n    this.puzzleStrucrure.render();\r\n  }\r\n\r\n  shootStars(x, y) {\r\n    let location;\r\n    for (let i = 0; i < Play.numberOfStars; i++) {\r\n      location = this.getStarLocation(x, y);\r\n      let star = new Star(location.x, location.y);\r\n      star.shoot(() => {\r\n        //console.warn(\"star end\");\r\n        star.destroy();\r\n      });\r\n    }\r\n    this.winSound.play();\r\n  }\r\n\r\n  getStarLocation(baseX, baseY) {\r\n    return {\r\n      x: Utils.getRandomIntInclusive(\r\n        baseX - Play.starsLocationOffset,\r\n        baseX + Play.starsLocationOffset\r\n      ),\r\n      y: Utils.getRandomIntInclusive(baseY - Play.starsLocationOffset, baseY)\r\n    };\r\n  }\r\n\r\n  solveCompleted() {\r\n    this.onPlayEnd();\r\n  }\r\n}\r\n\r\nexport default Play;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/play.js\n// module id = 16\n// module chunks = 0","import Utils from \"../common/utils\";\r\n\r\nclass Structure {\r\n  constructor(components) {\r\n    this.rendered = false;\r\n    this.components = [];\r\n    if (components) {\r\n      this.add(components);\r\n    }\r\n  }\r\n\r\n  add(components) {\r\n    let renderer = puzzle.getRenderer();\r\n    components = Utils.toArray(components);\r\n\r\n    if (this.rendered) {\r\n      for (let i = 0; i < components.length; i++) {\r\n        components[i].render(renderer);\r\n      }\r\n    }\r\n\r\n    this.components = this.components.concat(components);\r\n  }\r\n\r\n  render() {\r\n    this.rendered = true;\r\n    for (let i = 0; i < this.components.length; i++) {\r\n      this.components[i].render();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    for (let i = 0; i < this.components.length; i++) {\r\n      this.components[i].destroy();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Structure;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/structure.js\n// module id = 17\n// module chunks = 0","import Component from \"../../component\";\r\nimport Utils from \"../../../common/utils\";\r\nimport Frameable from \"../../../../canvas/renderable/framable\";\r\n\r\nclass Puzzle extends Component {\r\n  constructor(puzzleImage, onSolve, solvingTime, isFinal) {\r\n    super();\r\n\r\n    this.sound = new Audio(\"assets/yipee.wav\");\r\n\r\n    this.masks = [];\r\n\r\n    this.isFinal = isFinal;\r\n\r\n    this.onSolve = onSolve;\r\n    this.solvingTime = solvingTime;\r\n    this.puzzleImage = puzzleImage;\r\n\r\n    // this.target = properties.target;\r\n    this.setView(\r\n      new Frameable({\r\n        imageName: this.puzzleImage,\r\n        opacity: 1,\r\n        spritesheet: {\r\n          rowSize: 3\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  isOnPuzzle(x, y) {\r\n    //TODO\r\n    return true;\r\n  }\r\n\r\n  onSolved(onComplete) {\r\n    this.sound.play();\r\n\r\n    if (this.isFinal) {\r\n      this.view.easeFrame(1, this.solvingTime);\r\n    } else {\r\n      this.view.easeFrame(1, this.solvingTime, () => {\r\n        this.destroyMasks();\r\n        this.view.easeFrame(2, this.solvingTime, onComplete);\r\n      });\r\n    }\r\n  }\r\n\r\n  getOffset() {\r\n    return { x: this.view.x, y: this.view.y };\r\n  }\r\n\r\n  maskTarget(targetX, targetY, width, height) {\r\n    let mask = new Component();\r\n    mask.setView(\r\n      new Frameable(targetX, targetY, {\r\n        imageName: this.puzzleImage,\r\n        spritesheet: {\r\n          rowSize: 3\r\n        },\r\n        opacity: 0.5,\r\n        width: width,\r\n        height: height,\r\n        mask: {\r\n          x: targetX - this.view.x,\r\n          y: targetY - this.view.y\r\n        },\r\n        onReady: () => {\r\n          mask.view.animatePropertyTo(\"opacity\", 1, 500);\r\n        }\r\n      })\r\n    );\r\n    mask.view.setFrame(1);\r\n    //console.warn(\"render mask\");\r\n    mask.render();\r\n    this.masks.push(mask);\r\n  }\r\n\r\n  destroyMasks() {\r\n    $.each(this.masks, (i, mask) => {\r\n      mask.destroy();\r\n    });\r\n  }\r\n}\r\n\r\nexport default Puzzle;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/puzzle/puzzle.js\n// module id = 18\n// module chunks = 0","class PropertyAnimation {\r\n  constructor(propertyName, startValue, totalDelta, totalTime, options = {}) {\r\n    this.propertyName = propertyName;\r\n    this.startValue = startValue;\r\n    this.totalDelta = totalDelta;\r\n    this.totalTime = totalTime;\r\n    this.options = options;\r\n    this.startTime = Date.now();\r\n    this.done = false;\r\n  }\r\n\r\n  step(renderable) {\r\n    if (this.done) {\r\n      return true;\r\n    }\r\n\r\n    let property = this.propertyName;\r\n    let currentTime = Date.now();\r\n    let normalizedTimePortion = (currentTime - this.startTime) / this.totalTime;\r\n\r\n    let currentDelta = normalizedTimePortion * this.totalDelta;\r\n    let newValue;\r\n\r\n    if (normalizedTimePortion >= 1) {\r\n      newValue = this.getNewValue(this.totalDelta);\r\n      property == \"x\" || property == \"y\"\r\n        ? (renderable[property] = newValue)\r\n        : (renderable.options[property] = newValue);\r\n      this.done = true;\r\n      if (typeof this.options.onComplete == \"function\") {\r\n        this.options.onComplete();\r\n      }\r\n      return true;\r\n    } else {\r\n      let newValue = this.getNewValue(currentDelta);\r\n      property == \"x\" || property == \"y\"\r\n        ? (renderable[property] = newValue)\r\n        : (renderable.options[property] = newValue);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getNewValue(currentDelta) {\r\n    if (typeof this.options.customFunction == \"function\") {\r\n      return this.options.customFunction(this.startValue, currentDelta);\r\n    } else {\r\n      return this.startValue + currentDelta;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PropertyAnimation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/animation/propertyAnimation.js\n// module id = 19\n// module chunks = 0","import BasicImage from \"./basicImage\";\r\n\r\nclass Spritesheet extends BasicImage {\r\n  constructor(imageName, options = {}) {\r\n    super(imageName);\r\n    this.options = options;\r\n    this.imageName = imageName;\r\n    this.frameMapping = options.frameMapping;\r\n    this.frameIndex = 0;\r\n    this.frameData = null;\r\n\r\n    this.setFrame(0);\r\n  }\r\n\r\n  getFrameIndex(framename) {\r\n    return this.frameMapping.indexOf(framename);\r\n  }\r\n\r\n  setFrame(frameindex) {\r\n    this.frameIndex = frameindex;\r\n    if (this.frameData) {\r\n      this.updateFrameData();\r\n    }\r\n  }\r\n\r\n  getFrame() {\r\n    return this.frameIndex;\r\n  }\r\n\r\n  getImage(onLoaded) {\r\n    super.getImage(imageObject => {\r\n      if (\r\n        !this.frameData &&\r\n        this.image.naturalWidth &&\r\n        this.image.naturalHeight\r\n      ) {\r\n        this.setSizes();\r\n        this.updateFrameData();\r\n      }\r\n\r\n      imageObject.frame = this.frameData;\r\n      onLoaded(imageObject);\r\n    });\r\n  }\r\n\r\n  updateFrameData() {\r\n    let rowIndex = Math.floor(this.frameIndex / this.options.rowSize);\r\n    let colIndex = this.frameIndex % this.options.rowSize;\r\n    this.frameData = {\r\n      frameX: this.options.sWidth * colIndex,\r\n      frameY: this.options.sHeight * rowIndex,\r\n      frameWidth: this.options.sWidth,\r\n      frameHeight: this.options.sHeight\r\n    };\r\n  }\r\n\r\n  setSizes() {\r\n    this.options.rowSize\r\n      ? this.setWidthAndHeight()\r\n      : this.setRowSizeAndColumnSize();\r\n  }\r\n\r\n  setWidthAndHeight() {\r\n    this.options.columnSize = this.options.columnSize || 1;\r\n    this.options.sWidth = Math.floor(\r\n      this.image.naturalWidth / this.options.rowSize\r\n    );\r\n    this.options.sHeight = Math.floor(\r\n      this.image.naturalHeight / this.options.columnSize\r\n    );\r\n  }\r\n\r\n  setRowSizeAndColumnSize() {\r\n    this.options.sWidth = this.options.sWidth || this.image.naturalWidth;\r\n    this.options.sHeight = this.options.sHeight || this.image.naturalHeight;\r\n    this.options.rowSize = Math.floor(\r\n      this.image.naturalWidth / this.options.sWidth\r\n    );\r\n    this.options.columnSize = Math.floor(\r\n      this.image.naturalHeight / this.options.sHeight\r\n    );\r\n  }\r\n\r\n  getRowSize() {\r\n    return this.options.rowSize;\r\n  }\r\n\r\n  getColumnSize() {\r\n    return this.options.columnSize;\r\n  }\r\n\r\n  getSize() {\r\n    return this.options.rowSize * this.options.columnSize;\r\n  }\r\n}\r\n\r\nexport default Spritesheet;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/image/spritesheet.js\n// module id = 20\n// module chunks = 0","class Animation {\r\n  constructor(spritesheet, targetFrame, totalTime, options = {}) {\r\n    this.spritesheet = spritesheet;\r\n    this.targetFrame = targetFrame;\r\n    this.startFrame = this.spritesheet.getFrame();\r\n    this.options = options;\r\n\r\n    this.totalDelta = targetFrame - this.startFrame;\r\n    this.totalTime = totalTime;\r\n    this.startTime = Date.now();\r\n    this.done = false;\r\n  }\r\n\r\n  step() {\r\n    if (this.done) {\r\n      return;\r\n    }\r\n\r\n    let currentTime = Date.now();\r\n    let normalizedTimePortion = (currentTime - this.startTime) / this.totalTime;\r\n    let currentDelta = Math.floor(normalizedTimePortion * this.totalDelta);\r\n    let currentFrame = this.startFrame + currentDelta;\r\n\r\n    if (normalizedTimePortion >= 1 || currentFrame >= this.targetFrame) {\r\n      // if (this.properties.loop) {\r\n      //   this.currentFrame = this.properties.from;\r\n      // } else {\r\n      //   this.done = true;\r\n      //   if (typeof this.properties.onDone == \"function\") {\r\n      //     this.properties.onDone();\r\n      //   }\r\n      //   return;\r\n      // }\r\n      this.spritesheet.setFrame(this.targetFrame);\r\n      this.done = true;\r\n      if (typeof this.options.onComplete == \"function\") {\r\n        this.options.onComplete();\r\n      }\r\n      return;\r\n    } else {\r\n      this.spritesheet.setFrame(currentFrame);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Animation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/animation/animation.js\n// module id = 21\n// module chunks = 0","import Clickable from \"./clickable\";\r\n\r\nclass Draggable extends Clickable {\r\n  constructor(x, y, options = {}) {\r\n    super(x, y, options);\r\n    this.dragging = false;\r\n  }\r\n\r\n  //A VERY BAD TO DO IT!!!\r\n  onHover() {\r\n    $(\"canvas\").css(\"cursor\", \"grab\");\r\n    super.onHover();\r\n  }\r\n\r\n  onClick(e) {\r\n    this.dragging = true;\r\n    this.draggingOffset.x = e.offsetX - this.x;\r\n    this.draggingOffset.y = e.offsetY - this.y;\r\n    $(\"canvas\").css(\"cursor\", \"grabbing\");\r\n    super.onClick(e);\r\n  }\r\n\r\n  onMove(e) {\r\n    if (this.dragging) {\r\n      this.setPosition(\r\n        e.offsetX - this.draggingOffset.x,\r\n        e.offsetY - this.draggingOffset.y\r\n      );\r\n\r\n      if (this.options.onDrag) {\r\n        this.options.onDrag(e);\r\n      }\r\n    } else {\r\n      super.onMove(e);\r\n    }\r\n  }\r\n\r\n  onRelease(e) {\r\n    $(\"canvas\").css(\"cursor\", \"grab\");\r\n    this.dragging = false;\r\n    if (this.options.onDrop) {\r\n      this.options.onDrop(this.x, this.y);\r\n    }\r\n    super.onRelease(e);\r\n  }\r\n\r\n  hitTest(ctx, x, y) {\r\n    return this.dragging || super.hitTest(ctx, x, y);\r\n  }\r\n\r\n  onLeave(e) {\r\n    if (this.dragging) {\r\n      this.onMove(e);\r\n    } else {\r\n      $(\"canvas\").css(\"cursor\", \"auto\");\r\n      super.onLeave();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Draggable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/canvas/renderable/draggable.js\n// module id = 22\n// module chunks = 0","import PuzzleStructure from \"./puzzleStructure\";\nimport Part from \"../part/part\";\n\nclass MultiPuzzleStructure extends PuzzleStructure {\n  constructor(puzzleData, onSolvePart, onSolvePuzzle) {\n    super(puzzleData, onSolvePart, onSolvePuzzle);\n    this.doneCount = 0;\n    this.parts = [];\n    this.parsePuzzleImage(puzzleData);\n  }\n\n  parseParts(partsData) {\n    let locationBuffer;\n    let partBuffer;\n    $.each(partsData, (i, part) => {\n      locationBuffer = this.getRandomLocation();\n      partBuffer = new Part(\n        locationBuffer.x,\n        locationBuffer.y,\n        part,\n        this.solvePart.bind(this)\n      );\n      this.add(partBuffer);\n      this.parts.push(partBuffer);\n      partBuffer.putInPlace();\n    });\n  }\n\n  solvePart(part) {\n    this.puzzle.maskTarget(\n      part.partData.target.x,\n      part.partData.target.y,\n      part.view.options.width - 50,\n      part.view.options.height - 50\n    );\n    super.solvePart(part);\n  }\n\n  solve() {\n    this.doneCount++;\n    if (this.parts.length == this.doneCount) {\n      super.solve();\n    }\n  }\n}\n\nexport default MultiPuzzleStructure;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/puzzleStructure/multiPuzzleStructure.js\n// module id = 23\n// module chunks = 0","import Component from \"../../component\";\r\nimport Frameable from \"../../../../canvas/renderable/framable\";\r\nimport Utils from \"../../../common/utils\";\r\n\r\nclass Star extends Component {\r\n  static get animationTime() {\r\n    return 2000;\r\n  }\r\n\r\n  static get travalDistance() {\r\n    return 1000;\r\n  }\r\n\r\n  constructor(x, y) {\r\n    super();\r\n    this.setView(\r\n      new Frameable(x, y, {\r\n        imageName: \"star.png\",\r\n        width: 128,\r\n        height: 128,\r\n        opacity: 1,\r\n        rotation: 0\r\n      })\r\n    );\r\n\r\n    this.customFunction = this.createCustomFunction();\r\n    this.direction = this.getDirection();\r\n    this.sizePrecent = Utils.getRandomIntInclusive(100, 300);\r\n    this.rotation = Utils.getRandomIntInclusive(0, 360 * 5);\r\n  }\r\n\r\n  shoot(onComplete) {\r\n    this.render();\r\n\r\n    this.view.animateProperty(\r\n      \"x\",\r\n      this.direction * Star.travalDistance,\r\n      Star.animationTime\r\n    );\r\n\r\n    this.view.animateProperty(\"y\", Star.travalDistance, Star.animationTime, {\r\n      customFunction: this.customFunction\r\n    });\r\n\r\n    this.view.animatePropertyTo(\"size\", this.sizePrecent, Star.animationTime);\r\n\r\n    this.view.animatePropertyTo(\"rotation\", this.rotation, Star.animationTime);\r\n\r\n    this.view.animatePropertyTo(\"opacity\", 1, Star.animationTime / 2, {\r\n      onComplete: () => {\r\n        this.view.animatePropertyTo(\"opacity\", 0, Star.animationTime / 2, {\r\n          onComplete: onComplete\r\n        });\r\n      }\r\n    });\r\n\r\n    this.view.animateToFrame(23, Star.animationTime);\r\n  }\r\n\r\n  getDirection() {\r\n    let indicator = Utils.getRandomIntInclusive(0, 1);\r\n    return indicator == 0 ? -1 : 1;\r\n  }\r\n\r\n  createCustomFunction() {\r\n    let a = Utils.getRandomFloat(2.5, 5.5);\r\n    let b = Utils.getRandomFloat(0.008, 0.014);\r\n    return (y0, x) => {\r\n      return y0 + -a * x + b * x * x;\r\n    };\r\n  }\r\n}\r\n\r\nexport default Star;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/star/star.js\n// module id = 24\n// module chunks = 0","import SimplePuzzleStructure from \"./simplePuzzleStructure\";\n\nclass LinearPuzzleStructure extends SimplePuzzleStructure {\n  constructor(puzzleData, onSolvePart, onSolvePuzzle) {\n    super(puzzleData, onSolvePart, onSolvePuzzle);\n  }\n\n  //Written very badlly\n  parseParts(partsData) {\n    if (!this.partsCollection && partsData) {\n      this.partsCollection = partsData;\n    }\n    super.parseParts(this.partsCollection.shift());\n  }\n\n  solvePart(part) {\n    this.puzzle.maskTarget(\n      part.partData.target.x,\n      part.partData.target.y,\n      part.view.options.width - 50,\n      part.view.options.height - 50\n    );\n    super.solvePart(part);\n  }\n\n  solve() {\n    this.doneCount++;\n    if (this.partsCollection.length > 0) {\n      this.resetPartsLocations();\n      this.parseParts();\n    } else {\n      super.solve();\n    }\n  }\n}\n\nexport default LinearPuzzleStructure;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/play/puzzleStructure/linearPuzzleStructure.js\n// module id = 25\n// module chunks = 0","import Utils from \"../../common/utils\";\r\n\r\nclass PuzzleImageLoader {\r\n  constructor() {\r\n    this.puzzleImages = null;\r\n    this.final = null;\r\n  }\r\n\r\n  getRandomImage() {\r\n    let image;\r\n    let $deffered = $.Deferred();\r\n\r\n    if (this.puzzleImages) {\r\n      image = this.puzzleImages.length > 0 ? this.pickRandom() : undefined;\r\n      $deffered.resolve(image);\r\n    } else {\r\n      $.getJSON(\"assets/data.json\", data => {\r\n        this.puzzleImages = data.puzzles;\r\n        this.final = data.final;\r\n        this.final.final = true;\r\n        $deffered.resolve(data.first);\r\n      });\r\n    }\r\n\r\n    return $deffered.promise();\r\n  }\r\n\r\n  getFinalPuzzle() {\r\n    return this.final;\r\n  }\r\n\r\n  pickRandom() {\r\n    let index = Utils.getRandomIntInclusive(0, this.puzzleImages.length - 1);\r\n    let image = this.puzzleImages[index];\r\n    this.removeSelected(index);\r\n    return image;\r\n  }\r\n\r\n  removeSelected(index) {\r\n    this.puzzleImages.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport default new PuzzleImageLoader();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/components/puzzleImage/puzzleImageLoader .js\n// module id = 26\n// module chunks = 0","import Clickable from \"../canvas/renderable/clickable\";\nimport Component from \"./components/component\";\n\nclass NextButton extends Component {\n  constructor(onClick) {\n    super();\n\n    this.sound = new Audio(\"assets/click.wav\");\n\n    this.onClick = onClick;\n\n    this.setView(\n      new Clickable(1600, 1400, {\n        imageName: \"next.png\",\n        opacity: 0,\n        spritesheet: {\n          rowSize: 3\n        },\n        onClick: this.click.bind(this),\n        //BADDDDD!!!!!\n        onHover: () => {\n          $(\"canvas\").css(\"cursor\", \"pointer\");\n        },\n        onLeave: () => {\n          $(\"canvas\").css(\"cursor\", \"auto\");\n        }\n      })\n    );\n  }\n\n  putInPlace() {\n    this.view.animatePropertyTo(\"opacity\", 1, 800);\n    this.view.animatePropertyTo(\"y\", 400, 500);\n  }\n\n  click() {\n    this.sound.play();\n    this.reset();\n    this.onClick();\n  }\n\n  reset() {\n    this.view.animatePropertyTo(\"opacity\", 0, 500, {\n      onComplete: () => {\n        this.view.setPosition(this.view.x, 1400);\n      }\n    });\n  }\n}\n\nexport default NextButton;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/nextButton.js\n// module id = 27\n// module chunks = 0"],"sourceRoot":""}